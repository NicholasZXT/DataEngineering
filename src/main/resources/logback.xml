<?xml version="1.0" encoding="UTF-8"?>
<!-- 根节点必须是 configuration，可配置的属性有 3 个-->
<!-- scan: true表示配置文件如果发生改变，自动加载；scanPeriod: 配置自动加载的事件间隔，默认单位为毫秒；debug: false表示不打印Logback内部日志-->
<configuration scan="true" scanPeriod="600 seconds" debug="false">
    <!-- contextName 节点用于设置上下文对象 LoggerContext 的名称，默认是default，用于标识应用 -->
    <contextName>MyLoggerContext</contextName>

    <!-- property 节点， name 和 value 属性用于自定义一些变量-->
    <property name="file.info.name" value="info.log"/>
    <property name="file.error.name" value="error.log"/>

    <!-- appender 有两个必须提供的属性：name是自定义名称，class是对应的appender全限定类名-->
    <!-- Logback 提供的常见 appender 如下:
    ch.qos.logback.core.ConsoleAppender: 输出到控制台
    ch.qos.logback.core.FileAppender: 输出到文件
    ch.qos.logback.core.rolling.RollingFileAppender: 滚动记录文件
    -->
    <!-- 输出到控制台 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 设置格式的类 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 输出到文件 -->
    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <!-- 设置输出的文件名称 -->
        <file>${file.info.name}</file>
        <!-- 追加写入 -->
        <append>true</append>
        <!-- 设置格式 -->
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 输出到文件，并进行轮换，轮换策略为每天生成日志文件 -->
    <appender name="roll.file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <file></file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/TestWeb.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 配置具体的Logger，name设置名称，对应于某一个包名或者某个类名；level设置日志级别；additivity=false不继承上级Logger的配置-->
    <logger name="" level="info" additivity="false">
        <!-- 指定 Appender 的两种方式-->
        <appender-ref>console</appender-ref>
        <appender-ref ref="roll.file"/>
    </logger>

    <!-- root 也是 Logger，但是它最顶层的Logger，所以没有name属性，只有一个level属性用于设置日志级别-->
    <root level="info">
        <appender-ref>console</appender-ref>
    </root>
</configuration>